{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/images/default.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","box","description","src","alt","item","label","quantity","defaultProps","defaultImage","Statistics","title","statistics","map","percentage","id","FriendListItem","friend","isOnline","status","style","backgroundColor","width","FriendList","friends","TransactionHistory","items","classesType","td","classesCurrency","thead","th","tbody","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04e97a06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1OUje\",\"box\":\"Profile_box__2VSG2\",\"description\":\"Profile_description__1AOaT\",\"avatar\":\"Profile_avatar__HrQwg\",\"name\":\"Profile_name__rC19E\",\"tag\":\"Profile_tag__11cyM\",\"location\":\"Profile_location__3aadh\",\"stats\":\"Profile_stats__1chxK\",\"item\":\"Profile_item__1pxWe\",\"label\":\"Profile_label__1ER3d\",\"quantity\":\"Profile_quantity__uR6s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__3-rAZ\",\"thead\":\"TransactionHistory_thead__1p45t\",\"th\":\"TransactionHistory_th__1ACEf\",\"tbody\":\"TransactionHistory_tbody__hOPhT\",\"td\":\"TransactionHistory_td__1YqPC\",\"td-type\":\"TransactionHistory_td-type__29nBg\",\"td-currency\":\"TransactionHistory_td-currency__YInYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__SS5R4\",\"box\":\"Statistics_box__2qgqG\",\"title\":\"Statistics_title__1ux6C\",\"stat-list\":\"Statistics_stat-list__1inTh\",\"item\":\"Statistics_item__2jT6T\",\"label\":\"Statistics_label__FRwYY\",\"percentage\":\"Statistics_percentage__3DZUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__31_6l\",\"status\":\"FriendListItem_status__3SZY5\",\"avatar\":\"FriendListItem_avatar__1ym28\",\"name\":\"FriendListItem_name__2yrqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__3DQUX\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types'; //абсолютные импорты(все библиотеки) стоят выше, чем относительные(мои локальные)\nimport s from './Profile.module.css';\nimport defaultImage from '../images/default.jpg';\n\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes } }) => (\n  <div className={s.profile}>\n    {/* <div className={s['profile-box']}> */}\n    <div className={s.box}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers: </span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views: </span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes: </span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nProfile.defaultProps = {\n  name: 'unknown',\n  avatar: defaultImage,\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n};\n//проптайпы не попадают в продакшн\n\nexport default Profile;\n\n// ------------------------------------------------------------------\n// jsx шаблон\n\n// внутри самого файла компонента объявл компонент, его пропсы, а пропсы он получает там где он рендерится и данные импортировать(джейсон) так где он рендерится\n\n// компонент-передаешь ему данные и объявляешь шаблон, который ты хочешь рендерить, после чего при вызове ты передаешь данные, которые рендерить\n\n// задача компонента объявить сови дефолтные значения для своих пропсов, если не передали\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ title, stats /*children*/ }) => (\n  <section className={s.statistics}>\n    <div className={s.box}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s['stat-list']}>\n        {stats.map(stats => (\n          <li key={stats.id} className={s.item}>\n            <span className={s.label}>{stats.label}</span>\n            <span className={s.percentage}>{stats.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    {/* {children} */}\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n  // children: PropTypes.node, //node-что угодно, все, что может быть зарендерино\n};\n\n// function generateColor() {\n//   return '#' + Math.floor(Math.random() * 16777215).toString(16);\n// }\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\nimport defaultImage from '../images/default.jpg';\n\nconst FriendListItem = ({ friend: { avatar = defaultImage, name, isOnline } }) => {\n  const isActive = false;\n\n  return (\n    <li className={s.item}>\n      <span className={s.status} style={{ backgroundColor: isActive ? 'green' : 'red' }}>\n        {isOnline}\n      </span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"96\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  friend: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    // id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={s['friend-list']}>\n    {friends.map(friend => (\n      <FriendListItem key={`friend-list-item-${friend.id}`} friend={friend} />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  const secondLaneColor = '#ecf1f4';\n  // const classes = s.td + ' ' + s['td-type'];\n  const classesType = `${s.td} ${s['td-type']}`;\n  const classesCurrency = `${s.td} ${s['td-currency']}`;\n\n  return (\n    <table className={s['transaction-history']}>\n      <thead className={s.thead}>\n        <tr>\n          <th className={s.th}>Type</th>\n          <th className={s.th}>Amount</th>\n          <th className={s.th}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={s.tbody}>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td className={classesType}>{item.type}</td>\n            <td className={s.td}>{item.amount}</td>\n            <td className={classesCurrency}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport user from './user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './transactions.json';\n// это обычный экмоскрипт модуль, поэтому из него нужно экспортировать компонент и всегда это экспорт по умолчанию\n// дефолтный экспорт этого модуля\nconst App = () => (\n  <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData}></Statistics>\n    <Statistics stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />;\n  </div>\n);\n\nexport default App;\n// ------------------------------------------------------------------\n// внутри самого файла компонента объявл компонент, его пропсы, а пропсы он получает там где он рендерится и данные импортировать(джейсон) так где он рендерится\n","import React from 'react'; //-если есть jsx, реакт в компоненте не нужен(в файлике где он используется)\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport './reset.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n//<React.StrictMode> - оборачивает приложение в строгий режим\n"],"sourceRoot":""}