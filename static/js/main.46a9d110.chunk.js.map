{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendListItem.module.css","components/images/default.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","box","description","src","alt","item","label","quantity","defaultProps","defaultImage","Statistics","title","children","map","percentage","id","FriendListItem","friend","isOnline","status","style","color","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46a9d110.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1OUje\",\"box\":\"Profile_box__2VSG2\",\"description\":\"Profile_description__1AOaT\",\"avatar\":\"Profile_avatar__HrQwg\",\"name\":\"Profile_name__rC19E\",\"tag\":\"Profile_tag__11cyM\",\"location\":\"Profile_location__3aadh\",\"stats\":\"Profile_stats__1chxK\",\"item\":\"Profile_item__1pxWe\",\"label\":\"Profile_label__1ER3d\",\"quantity\":\"Profile_quantity__uR6s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__BAAyC\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types'; //абсолютные импорты(все библиотеки) стоят выше, чем относительные(мои локальные)\nimport s from './Profile.module.css';\nimport defaultImage from '../images/default.jpg';\n\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes } }) => (\n  <div className={s.profile}>\n    {/* <div className={s['profile-box']}> */}\n    <div className={s.box}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers: </span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views: </span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes: </span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nProfile.defaultProps = {\n  name: 'unknown',\n  avatar: defaultImage,\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n};\n//проптайпы не попадают в продакшн\n\nexport default Profile;\n\n// ------------------------------------------------------------------\n// jsx шаблон\n\n// внутри самого файла компонента объявл компонент, его пропсы, а пропсы он получает там где он рендерится и данные импортировать(джейсон) так где он рендерится\n\n// компонент-передаешь ему данные и объявляешь шаблон, который ты хочешь рендерить, после чего при вызове ты передаешь данные, которые рендерить\n\n// задача компонента объявить сови дефолтные значения для своих пропсов, если не передали\n","import PropTypes from 'prop-types';\nimport s from './';\n\nconst Statistics = ({ title, stats, children }) => (\n  <section className=\"statistics\">\n    {title && <h2 className=\"title\">{title}</h2>}\n\n    <ul className=\"stat-list\">\n      {stats.map(stats => (\n        <li key={stats.id} className=\"item\">\n          <span className=\"label\">{stats.label}</span>\n          <span className=\"percentage\">{stats.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n\n    {children}\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n  children: PropTypes.node, //node-что угодно, все, что может быть зарендерино\n};\n\n// function getRandomColor() {\n//   return `rgb${randomIntegerFromInterval(0, 255)}, ${randomIntegerFromInterval(\n//     0,\n//     255,\n//   )}, ${randomIntegerFromInterval(0, 255)}`;\n// }\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\nimport defaultImage from '../images/default.jpg';\n\nconst FriendListItem = ({ friend: { avatar = defaultImage, name, isOnline } }) => {\n  const isActive = true;\n\n  return (\n    <li className=\"item\">\n      <span className={s.status} style={{ color: isActive ? 'green' : 'red' }}>\n        {isOnline}\n      </span>\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  friend: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    // id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className=\"friend-list\">\n    {friends.map(friend => (\n      <FriendListItem key={`friend-list-item-${friend.id}`} friend={friend} />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './';\n\nconst TransactionHistory = ({ items }) => (\n  <table className=\"transaction-history\">\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport user from './user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './transactions.json';\n// это обычный экмоскрипт модуль, поэтому из него нужно экспортировать компонент и всегда это экспорт по умолчанию\n// дефолтный экспорт этого модуля\nconst App = () => (\n  <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n\n    <Statistics title=\"Upload stats\" stats={statisticalData}>\n      <TransactionHistory items={transactions} />;\n    </Statistics>\n    <Statistics stats={statisticalData} />\n\n    <FriendList friends={friends} />\n  </div>\n);\n\nexport default App;\n// ------------------------------------------------------------------\n// внутри самого файла компонента объявл компонент, его пропсы, а пропсы он получает там где он рендерится и данные импортировать(джейсон) так где он рендерится\n","import React from 'react'; //-если есть jsx, реакт в компоненте не нужен(в файлике где он используется)\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport './reset.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n//<React.StrictMode> - оборачивает приложение в строгий режим\n"],"sourceRoot":""}